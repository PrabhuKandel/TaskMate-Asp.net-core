@model Task_Manager.Models.Task
@{
    ViewData["Title"] = "Create";
}
<div class="container mt-4">
    <h1 class="text-primary d-flex align-items-center gap-2">
        <i class="fa-solid fa-plus-circle"></i> Create Task
    </h1>
    <hr />

    <form asp-action="Create" class="w-50">
        <input type="hidden" asp-for="UserId" />

        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

        <!-- First Row: Name & Description -->
        <div class="row">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label asp-for="Name" class="form-label"><i class="fa-solid fa-tasks me-2"></i> Task Name</label>
                    <input asp-for="Name" class="form-control" placeholder="Enter task name" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label asp-for="Description" class="form-label"><i class="fa-solid fa-align-left me-2"></i> Description</label>
                    <textarea asp-for="Description" class="form-control" placeholder="Enter task description"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- Second Row: Status & Priority -->
        <div class="row">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label asp-for="Status" class="form-label"><i class="fa-solid fa-spinner me-2"></i> Status</label>
                    <select asp-for="Status" class="form-select">
                        <option value="0">Pending</option>
                        <option value="1">Completed</option>
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label asp-for="Priority" class="form-label"><i class="fa-solid fa-flag me-2"></i> Priority</label>
                    <select asp-for="Priority" class="form-select" asp-items="Html.GetEnumSelectList<Task_Manager.Models.TaskPriority>()"></select>
                    <span asp-validation-for="Priority" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- Third Row: Created At & Due Date -->
        <div class="row">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label asp-for="CreatedAt" class="form-label"><i class="fa-solid fa-calendar-check me-2"></i> Created At</label>
                    <input asp-for="CreatedAt" class="form-control" id="createdAt" type="datetime-local" readonly />
                    <span asp-validation-for="CreatedAt" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label asp-for="DueDate" class="form-label"><i class="fa-solid fa-calendar-day me-2"></i> Due Date</label>
                    <input asp-for="DueDate" class="form-control" id="dueDate" type="datetime-local" />
                    <span asp-validation-for="DueDate" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- Button Group: Back & Submit -->
        <div class="d-flex gap-3 mt-3 justify-content-end">
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fa-solid fa-arrow-left me-2"></i> Back to List
            </a>
            <button type="submit" class="btn btn-success btn-sm d-flex align-items-center">
                <i class="fa-solid fa-check-circle me-2"></i> Create Task
            </button>
        </div>

    </form>
</div>


@section Scripts {

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://cdn.jsdelivr.net/npm/luxon@3.5.0/build/global/luxon.min.js"></script>
    <script>
      
        // JavaScript to set the current date and time as the default value
            window.onload = function () {
                    
             //const  DateTime = luxon.DateTime;
            const nepalTime = luxon.DateTime.now().setZone('Asia/Kathmandu').toFormat("yyyy-MM-dd'T'HH:mm");

            // Set the min date and time to current date and time
            var dateInput = document.getElementById("createdAt");   
            var dueDate = document.getElementById("dueDate");
              
            //initilaize with current date
            dateInput.value = nepalTime;
            dateInput.setAttribute("min", nepalTime); // Prevent selecting past dates
            dueDate.setAttribute("min", nepalTime); // Prevent selecting past dates

            //ensure due date to be greater than task creation date




        };
    </script>
}
